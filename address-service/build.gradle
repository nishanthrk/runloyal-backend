// Address Service specific configuration
plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.flywaydb.flyway' version '9.22.3'
}

// jar.archiveBaseName = 'address-service' // Spring Boot will use project name
description = 'Address Management Service'

// Spring Boot configuration
springBoot {
    mainClass = 'com.example.addressservice.AddressServiceApplication'
}

repositories {
    mavenCentral()
}

// Service-specific dependencies
dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // Exclude actuator for Docker builds to avoid cgroupv2 issues
    // implementation 'org.springframework.boot:spring-boot-starter-actuator'
    
    // Kafka
    implementation 'org.springframework.kafka:spring-kafka'
    
    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'
    
    // Swagger/OpenAPI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    
    // Database - PostgreSQL specific for address service
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.flywaydb:flyway-core:9.22.3'
    
    // Test dependencies
    testImplementation 'org.awaitility:awaitility:4.2.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

bootJar {
    archiveFileName = "${archivesBaseName}-${version}.jar"
}

flyway {
    url = 'jdbc:postgresql://localhost:5432/addressdb'
    user = 'nishanth'
    password = ''
    locations = ['classpath:db/migration']
}